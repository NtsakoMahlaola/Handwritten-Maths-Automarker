{
  "questions": [
    {
      "id": "Q1",
      "question": "Differentiate y = (x^2 + 1)^x",
      "graded_answers": [
        {
          "id": "A",
          "steps": [
            {
              "step_number": 1,
              "raw": "y = (x^2 + 1)^x",
              "parsed": "(x**2 + 1)**x",
              "parsed_ok": true
            },
            {
              "step_number": 2,
              "raw": "y' = (x^2 + 1)^x [ln(x^2 + 1) + x*(2x)/(x^2 + 1)]",
              "parsed": null,
              "parsed_ok": false
            }
          ],
          "transitions": [
            {
              "from": 1,
              "to": 2,
              "type": "equivalence",
              "ok": false,
              "note": "parse_failed"
            }
          ],
          "final_matches_expected": null,
          "sympy_score": 0.0,
          "sympy_details": {
            "total_checks": 1,
            "passed_checks": 0
          }
        },
        {
          "id": "B",
          "steps": [
            {
              "step_number": 1,
              "raw": "ln(y) = x ln(x^2 + 1)",
              "parsed": null,
              "parsed_ok": false
            },
            {
              "step_number": 2,
              "raw": "(1/y) dy/dx = ln(x^2 + 1) + x*(2x)/(x^2 + 1)",
              "parsed": null,
              "parsed_ok": false
            },
            {
              "step_number": 3,
              "raw": "dy/dx = y[ln(x^2 + 1) + 2x^2/(x^2 + 1)]",
              "parsed": null,
              "parsed_ok": false
            }
          ],
          "transitions": [
            {
              "from": 1,
              "to": 2,
              "type": "derivative",
              "ok": false,
              "note": "parse_failed"
            },
            {
              "from": 2,
              "to": 3,
              "type": "derivative",
              "ok": false,
              "note": "parse_failed"
            }
          ],
          "final_matches_expected": null,
          "sympy_score": 0.0,
          "sympy_details": {
            "total_checks": 2,
            "passed_checks": 0
          }
        },
        {
          "id": "C",
          "steps": [
            {
              "step_number": 1,
              "raw": "y = x^2 + 1",
              "parsed": "x**2 + 1",
              "parsed_ok": true
            },
            {
              "step_number": 2,
              "raw": "y' = 2x + 1",
              "parsed": "2*x + 1",
              "parsed_ok": true
            }
          ],
          "transitions": [
            {
              "from": 1,
              "to": 2,
              "type": "equivalence",
              "ok": false,
              "note": "not_equivalent"
            }
          ],
          "final_matches_expected": null,
          "sympy_score": 0.0,
          "sympy_details": {
            "total_checks": 1,
            "passed_checks": 0
          }
        },
        {
          "id": "D",
          "steps": [
            {
              "step_number": 1,
              "raw": "y = (x^2 + 1)^x",
              "parsed": "(x**2 + 1)**x",
              "parsed_ok": true
            },
            {
              "step_number": 2,
              "raw": "y' = (x^2 + 1)^x [x*(2x)/(x^2 + 1)]",
              "parsed": "(x**2 + 1)**x(2*x**2/(x**2 + 1))",
              "parsed_ok": true
            }
          ],
          "transitions": [
            {
              "from": 1,
              "to": 2,
              "type": "equivalence",
              "ok": false,
              "note": "not_equivalent"
            }
          ],
          "final_matches_expected": null,
          "sympy_score": 0.0,
          "sympy_details": {
            "total_checks": 1,
            "passed_checks": 0
          }
        }
      ]
    },
    {
      "id": "Q2",
      "question": "Integrate \u222b x e^{x^2} dx",
      "graded_answers": [
        {
          "id": "A",
          "steps": [
            {
              "step_number": 1,
              "raw": "Let u = x^2, du = 2x dx",
              "parsed": null,
              "parsed_ok": false
            },
            {
              "step_number": 2,
              "raw": "\u222b x e^{x^2} dx = 1/2 \u222b e^u du = 1/2 e^{x^2} + C",
              "parsed": null,
              "parsed_ok": false
            }
          ],
          "transitions": [
            {
              "from": 1,
              "to": 2,
              "type": "equivalence",
              "ok": false,
              "note": "parse_failed"
            }
          ],
          "final_matches_expected": null,
          "sympy_score": 0.0,
          "sympy_details": {
            "total_checks": 1,
            "passed_checks": 0
          }
        },
        {
          "id": "B",
          "steps": [
            {
              "step_number": 1,
              "raw": "Let t = x^2, dt = 2x dx",
              "parsed": null,
              "parsed_ok": false
            },
            {
              "step_number": 2,
              "raw": "\u222b x e^{x^2} dx = (1/2) e^{x^2} + C",
              "parsed": null,
              "parsed_ok": false
            }
          ],
          "transitions": [
            {
              "from": 1,
              "to": 2,
              "type": "equivalence",
              "ok": false,
              "note": "parse_failed"
            }
          ],
          "final_matches_expected": null,
          "sympy_score": 0.0,
          "sympy_details": {
            "total_checks": 1,
            "passed_checks": 0
          }
        },
        {
          "id": "C",
          "steps": [
            {
              "step_number": 1,
              "raw": "\u222b x e^{x^2} dx = x^2 e^{x^2} + C",
              "parsed": null,
              "parsed_ok": false
            }
          ],
          "transitions": [],
          "final_matches_expected": null,
          "sympy_score": 0.0,
          "sympy_details": {
            "total_checks": 0,
            "passed_checks": 0
          }
        },
        {
          "id": "D",
          "steps": [
            {
              "step_number": 1,
              "raw": "Let u = x^2, du = 2x dx",
              "parsed": null,
              "parsed_ok": false
            },
            {
              "step_number": 2,
              "raw": "\u222b x e^{x^2} dx = e^{x^2} + C",
              "parsed": "C + e**(x**2)",
              "parsed_ok": true
            }
          ],
          "transitions": [
            {
              "from": 1,
              "to": 2,
              "type": "equivalence",
              "ok": false,
              "note": "parse_failed"
            }
          ],
          "final_matches_expected": null,
          "sympy_score": 0.0,
          "sympy_details": {
            "total_checks": 1,
            "passed_checks": 0
          }
        }
      ]
    },
    {
      "id": "Q3",
      "question": "Find the derivative of y = sin(x) cos(x)",
      "graded_answers": [
        {
          "id": "A",
          "steps": [
            {
              "step_number": 1,
              "raw": "y' = cos(x)cos(x) - sin(x)sin(x) = cos(2x)",
              "parsed": null,
              "parsed_ok": false
            }
          ],
          "transitions": [],
          "final_matches_expected": null,
          "sympy_score": 0.0,
          "sympy_details": {
            "total_checks": 0,
            "passed_checks": 0
          }
        },
        {
          "id": "B",
          "steps": [
            {
              "step_number": 1,
              "raw": "y' = sin(x)(-sin(x)) + cos(x)cos(x) = cos^2(x) - sin^2(x)",
              "parsed": null,
              "parsed_ok": false
            }
          ],
          "transitions": [],
          "final_matches_expected": null,
          "sympy_score": 0.0,
          "sympy_details": {
            "total_checks": 0,
            "passed_checks": 0
          }
        },
        {
          "id": "C",
          "steps": [
            {
              "step_number": 1,
              "raw": "y' = cos(x) + sin(x)",
              "parsed": null,
              "parsed_ok": false
            }
          ],
          "transitions": [],
          "final_matches_expected": null,
          "sympy_score": 0.0,
          "sympy_details": {
            "total_checks": 0,
            "passed_checks": 0
          }
        },
        {
          "id": "D",
          "steps": [
            {
              "step_number": 1,
              "raw": "y' = cos(x)cos(x) + sin(x)sin(x) = 1",
              "parsed": "1",
              "parsed_ok": true
            }
          ],
          "transitions": [],
          "final_matches_expected": null,
          "sympy_score": 0.0,
          "sympy_details": {
            "total_checks": 0,
            "passed_checks": 0
          }
        }
      ]
    },
    {
      "id": "Q4",
      "question": "Differentiate y = e^{3x} (x^2 + 1)",
      "graded_answers": [
        {
          "id": "A",
          "steps": [
            {
              "step_number": 1,
              "raw": "y' = e^{3x}(3)(x^2 + 1) + e^{3x}(2x) = e^{3x}(3x^2 + 3 + 2x)",
              "parsed": null,
              "parsed_ok": false
            }
          ],
          "transitions": [],
          "final_matches_expected": null,
          "sympy_score": 0.0,
          "sympy_details": {
            "total_checks": 0,
            "passed_checks": 0
          }
        },
        {
          "id": "B",
          "steps": [
            {
              "step_number": 1,
              "raw": "y' = e^{3x}[2x + 3(x^2 + 1)]",
              "parsed": null,
              "parsed_ok": false
            }
          ],
          "transitions": [],
          "final_matches_expected": null,
          "sympy_score": 0.0,
          "sympy_details": {
            "total_checks": 0,
            "passed_checks": 0
          }
        },
        {
          "id": "C",
          "steps": [
            {
              "step_number": 1,
              "raw": "y' = e^{3x}(x^2 + 1)",
              "parsed": null,
              "parsed_ok": false
            }
          ],
          "transitions": [],
          "final_matches_expected": null,
          "sympy_score": 0.0,
          "sympy_details": {
            "total_checks": 0,
            "passed_checks": 0
          }
        },
        {
          "id": "D",
          "steps": [
            {
              "step_number": 1,
              "raw": "y' = e^{3x}(3x^2 + 3)",
              "parsed": null,
              "parsed_ok": false
            }
          ],
          "transitions": [],
          "final_matches_expected": null,
          "sympy_score": 0.0,
          "sympy_details": {
            "total_checks": 0,
            "passed_checks": 0
          }
        }
      ]
    },
    {
      "id": "Q5",
      "question": "Solve for x: 2x + 3 = 7",
      "graded_answers": [
        {
          "id": "A",
          "steps": [
            {
              "step_number": 1,
              "raw": "2x + 3 = 7",
              "parsed": "7",
              "parsed_ok": true
            },
            {
              "step_number": 2,
              "raw": "2x = 4",
              "parsed": "4",
              "parsed_ok": true
            },
            {
              "step_number": 3,
              "raw": "x = 2",
              "parsed": "2",
              "parsed_ok": true
            }
          ],
          "transitions": [
            {
              "from": 1,
              "to": 2,
              "type": "equivalence",
              "ok": false,
              "note": "not_equivalent"
            },
            {
              "from": 2,
              "to": 3,
              "type": "equivalence",
              "ok": false,
              "note": "not_equivalent"
            }
          ],
          "final_matches_expected": null,
          "sympy_score": 0.0,
          "sympy_details": {
            "total_checks": 2,
            "passed_checks": 0
          }
        },
        {
          "id": "B",
          "steps": [
            {
              "step_number": 1,
              "raw": "2x = 7 - 3",
              "parsed": "4",
              "parsed_ok": true
            },
            {
              "step_number": 2,
              "raw": "x = 2",
              "parsed": "2",
              "parsed_ok": true
            }
          ],
          "transitions": [
            {
              "from": 1,
              "to": 2,
              "type": "equivalence",
              "ok": false,
              "note": "not_equivalent"
            }
          ],
          "final_matches_expected": null,
          "sympy_score": 0.0,
          "sympy_details": {
            "total_checks": 1,
            "passed_checks": 0
          }
        },
        {
          "id": "C",
          "steps": [
            {
              "step_number": 1,
              "raw": "x = 7 - 3 = 4",
              "parsed": "4",
              "parsed_ok": true
            }
          ],
          "transitions": [],
          "final_matches_expected": null,
          "sympy_score": 0.0,
          "sympy_details": {
            "total_checks": 0,
            "passed_checks": 0
          }
        },
        {
          "id": "D",
          "steps": [
            {
              "step_number": 1,
              "raw": "x = (7 - 3)/3",
              "parsed": "4/3",
              "parsed_ok": true
            }
          ],
          "transitions": [],
          "final_matches_expected": null,
          "sympy_score": 0.0,
          "sympy_details": {
            "total_checks": 0,
            "passed_checks": 0
          }
        }
      ]
    },
    {
      "id": "Q6",
      "question": "Find dy/dx for y = (x^2 + 1)/(x - 1)",
      "graded_answers": [
        {
          "id": "A",
          "steps": [
            {
              "step_number": 1,
              "raw": "y' = [(2x)(x - 1) - (x^2 + 1)(1)]/(x - 1)^2 = (x^2 - 2x - 1)/(x - 1)^2",
              "parsed": "(x**2 - 2*x - 1)/(x - 1)**2",
              "parsed_ok": true
            }
          ],
          "transitions": [],
          "final_matches_expected": null,
          "sympy_score": 0.0,
          "sympy_details": {
            "total_checks": 0,
            "passed_checks": 0
          }
        },
        {
          "id": "B",
          "steps": [
            {
              "step_number": 1,
              "raw": "y' = [(x - 1)(2x) - (x^2 + 1)]/(x - 1)^2",
              "parsed": "(-x**2 + 2*x*(x - 1) - 1)/(x - 1)**2",
              "parsed_ok": true
            }
          ],
          "transitions": [],
          "final_matches_expected": null,
          "sympy_score": 0.0,
          "sympy_details": {
            "total_checks": 0,
            "passed_checks": 0
          }
        },
        {
          "id": "C",
          "steps": [
            {
              "step_number": 1,
              "raw": "y' = (2x)/(x - 1)",
              "parsed": "2*x/(x - 1)",
              "parsed_ok": true
            }
          ],
          "transitions": [],
          "final_matches_expected": null,
          "sympy_score": 0.0,
          "sympy_details": {
            "total_checks": 0,
            "passed_checks": 0
          }
        },
        {
          "id": "D",
          "steps": [
            {
              "step_number": 1,
              "raw": "y' = [(x^2 + 1)(1) - 2x(x - 1)]/(x - 1)^2",
              "parsed": "(x**2 - 2*x*(x - 1) + 1)/(x - 1)**2",
              "parsed_ok": true
            }
          ],
          "transitions": [],
          "final_matches_expected": null,
          "sympy_score": 0.0,
          "sympy_details": {
            "total_checks": 0,
            "passed_checks": 0
          }
        }
      ]
    },
    {
      "id": "Q7",
      "question": "Compute the limit lim_{x\u21920} (sin(2x))/x",
      "graded_answers": [
        {
          "id": "A",
          "steps": [
            {
              "step_number": 1,
              "raw": "lim_{x\u21920} (sin(2x))/x = 2",
              "parsed": "2",
              "parsed_ok": true
            }
          ],
          "transitions": [],
          "final_matches_expected": null,
          "sympy_score": 0.0,
          "sympy_details": {
            "total_checks": 0,
            "passed_checks": 0
          }
        },
        {
          "id": "B",
          "steps": [
            {
              "step_number": 1,
              "raw": "lim_{x\u21920} (sin(2x))/x = 2 * lim_{x\u21920} (sin(x))/x = 2",
              "parsed": "2",
              "parsed_ok": true
            }
          ],
          "transitions": [],
          "final_matches_expected": null,
          "sympy_score": 0.0,
          "sympy_details": {
            "total_checks": 0,
            "passed_checks": 0
          }
        },
        {
          "id": "C",
          "steps": [
            {
              "step_number": 1,
              "raw": "lim_{x\u21920} (sin(2x))/x = 1",
              "parsed": "1",
              "parsed_ok": true
            }
          ],
          "transitions": [],
          "final_matches_expected": null,
          "sympy_score": 0.0,
          "sympy_details": {
            "total_checks": 0,
            "passed_checks": 0
          }
        },
        {
          "id": "D",
          "steps": [
            {
              "step_number": 1,
              "raw": "lim_{x\u21920} (sin(2x))/x = 2 * (sin(x)/x) = 2",
              "parsed": "2",
              "parsed_ok": true
            }
          ],
          "transitions": [],
          "final_matches_expected": null,
          "sympy_score": 0.0,
          "sympy_details": {
            "total_checks": 0,
            "passed_checks": 0
          }
        }
      ]
    },
    {
      "id": "Q8",
      "question": "Differentiate y = ln(x^2 + 3x)",
      "graded_answers": [
        {
          "id": "A",
          "steps": [
            {
              "step_number": 1,
              "raw": "y' = (2x + 3)/(x^2 + 3x)",
              "parsed": "(2*x + 3)/(x*(x + 3))",
              "parsed_ok": true
            }
          ],
          "transitions": [],
          "final_matches_expected": null,
          "sympy_score": 0.0,
          "sympy_details": {
            "total_checks": 0,
            "passed_checks": 0
          }
        },
        {
          "id": "B",
          "steps": [
            {
              "step_number": 1,
              "raw": "y' = (1/(x^2 + 3x))(2x + 3)",
              "parsed": "(2*x + 3)/(x*(x + 3))",
              "parsed_ok": true
            }
          ],
          "transitions": [],
          "final_matches_expected": null,
          "sympy_score": 0.0,
          "sympy_details": {
            "total_checks": 0,
            "passed_checks": 0
          }
        },
        {
          "id": "C",
          "steps": [
            {
              "step_number": 1,
              "raw": "y' = 1/(2x + 3)",
              "parsed": "1/(2*x + 3)",
              "parsed_ok": true
            }
          ],
          "transitions": [],
          "final_matches_expected": null,
          "sympy_score": 0.0,
          "sympy_details": {
            "total_checks": 0,
            "passed_checks": 0
          }
        },
        {
          "id": "D",
          "steps": [
            {
              "step_number": 1,
              "raw": "y' = (x^2 + 3x)/(2x + 3)",
              "parsed": "x*(x + 3)/(2*x + 3)",
              "parsed_ok": true
            }
          ],
          "transitions": [],
          "final_matches_expected": null,
          "sympy_score": 0.0,
          "sympy_details": {
            "total_checks": 0,
            "passed_checks": 0
          }
        }
      ]
    },
    {
      "id": "Q9",
      "question": "Find y' if y = (x^3 + 2x^2 + x + 1)/(x^2 + 1)",
      "graded_answers": [
        {
          "id": "A",
          "steps": [
            {
              "step_number": 1,
              "raw": "y' = [(3x^2 + 4x + 1)(x^2 + 1) - (x^3 + 2x^2 + x + 1)(2x)]/(x^2 + 1)^2",
              "parsed": "(x**4 + 2*x**2 + 2*x + 1)/(x**4 + 2*x**2 + 1)",
              "parsed_ok": true
            }
          ],
          "transitions": [],
          "final_matches_expected": null,
          "sympy_score": 0.0,
          "sympy_details": {
            "total_checks": 0,
            "passed_checks": 0
          }
        },
        {
          "id": "B",
          "steps": [
            {
              "step_number": 1,
              "raw": "y' = [(x^2 + 1)(3x^2 + 4x + 1) - (x^3 + 2x^2 + x + 1)(2x)]/(x^2 + 1)^2",
              "parsed": "(x**4 + 2*x**2 + 2*x + 1)/(x**4 + 2*x**2 + 1)",
              "parsed_ok": true
            }
          ],
          "transitions": [],
          "final_matches_expected": null,
          "sympy_score": 0.0,
          "sympy_details": {
            "total_checks": 0,
            "passed_checks": 0
          }
        },
        {
          "id": "C",
          "steps": [
            {
              "step_number": 1,
              "raw": "y' = (3x^2 + 4x + 1)/(x^2 + 1)",
              "parsed": "(3*x**2 + 4*x + 1)/(x**2 + 1)",
              "parsed_ok": true
            }
          ],
          "transitions": [],
          "final_matches_expected": null,
          "sympy_score": 0.0,
          "sympy_details": {
            "total_checks": 0,
            "passed_checks": 0
          }
        },
        {
          "id": "D",
          "steps": [
            {
              "step_number": 1,
              "raw": "y' = [(x^2 + 1)(3x^2 + 4x) - (x^3 + 2x^2 + x + 1)(2x)]/(x^2 + 1)^2",
              "parsed": "x*(x**3 + x + 2)/(x**4 + 2*x**2 + 1)",
              "parsed_ok": true
            }
          ],
          "transitions": [],
          "final_matches_expected": null,
          "sympy_score": 0.0,
          "sympy_details": {
            "total_checks": 0,
            "passed_checks": 0
          }
        }
      ]
    },
    {
      "id": "Q10",
      "question": "Differentiate y = (x^2 + 1)^3 (x^3 - 2x)^2",
      "graded_answers": [
        {
          "id": "A",
          "steps": [
            {
              "step_number": 1,
              "raw": "y' = 3(x^2 + 1)^2(2x)(x^3 - 2x)^2 + (x^2 + 1)^3[2(x^3 - 2x)(3x^2 - 2)]",
              "parsed": null,
              "parsed_ok": false
            }
          ],
          "transitions": [],
          "final_matches_expected": null,
          "sympy_score": 0.0,
          "sympy_details": {
            "total_checks": 0,
            "passed_checks": 0
          }
        },
        {
          "id": "B",
          "steps": [
            {
              "step_number": 1,
              "raw": "y' = (x^2 + 1)^2(6x)(x^3 - 2x)^2 + (x^2 + 1)^3(2)(x^3 - 2x)(3x^2 - 2)",
              "parsed": "12*x**11 - 10*x**9 - 40*x**7 + 6*x**5 + 32*x**3 + 8*x",
              "parsed_ok": true
            }
          ],
          "transitions": [],
          "final_matches_expected": null,
          "sympy_score": 0.0,
          "sympy_details": {
            "total_checks": 0,
            "passed_checks": 0
          }
        },
        {
          "id": "C",
          "steps": [
            {
              "step_number": 1,
              "raw": "y' = (x^2 + 1)^3(3x^2 - 2)",
              "parsed": "(x**2 + 1)**3*(3*x**2 - 2)",
              "parsed_ok": true
            }
          ],
          "transitions": [],
          "final_matches_expected": null,
          "sympy_score": 0.0,
          "sympy_details": {
            "total_checks": 0,
            "passed_checks": 0
          }
        },
        {
          "id": "D",
          "steps": [
            {
              "step_number": 1,
              "raw": "y' = 3(x^2 + 1)^2(2x)(x^3 - 2x)^2",
              "parsed": "6*x**3*(x**2 - 2)**2*(x**2 + 1)**2",
              "parsed_ok": true
            }
          ],
          "transitions": [],
          "final_matches_expected": null,
          "sympy_score": 0.0,
          "sympy_details": {
            "total_checks": 0,
            "passed_checks": 0
          }
        }
      ]
    }
  ]
}